# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - feature-*
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Get branch name
      id: vars
      run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: phoenix-todo
        IMAGE_TAG: ${{ steps.vars.outputs.short_ref }}-${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg PHOENIX_SECRET=${{ secrets.PHOENIX_SECRET }} .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Install kubectl
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.17.7/2020-07-08/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/bin/kubectl
        echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > /tmp/config
        export KUBECONFIG=/tmp/config
        kubectl version --short --client
        kubectl get svc
    # - name: Build and push backend Docker image
    #   uses: kciter/aws-ecr-action@v1
    #   with:
    #     access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     account_id: ${{ secrets.AWS_ACCOUNT_ID }}
    #     repo: phoenix-todo
    #     region: eu-west-2
    #     tags: ${{ steps.vars.outputs.short_ref }}
    #     create_repo: true
    #     extra_build_args: "--build-arg PHOENIX_SECRET=${{ secrets.PHOENIX_SECRET }}"
    # - name: Deploy feature with helm
    #   uses: WyriHaximus/github-action-helm3@v2
    #   with:
    #     kubeconfig: '${{ secrets.KUBE_CONFIG }}'
    #     exec: helm upgrade phoenix-todo-${{ steps.vars.outputs.short_ref }} ./phoenix-todo --install --namespace=phoenix-todo --set=image.tag=${{ steps.vars.outputs.short_ref }}